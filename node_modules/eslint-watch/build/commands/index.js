"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = require("../logger");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const logger = (0, _logger.createLogger)('commands');
const commands = [require('./clear'), require('./version'), require('./versions')];
var _default = {
  run(options) {
    return _asyncToGenerator(function* () {
      const runnable = commands.filter(c => c.trigger(options));
      logger.debug('Running %o esw commands', runnable.length);
      const result = yield Promise.all(runnable.map(c => {
        logger.debug('Running %s', c.name);
        return c.run(options);
      }));
      const results = result.join('\n');
      logger.debug('Success:', results);
      return results;
    })();
  }

};
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJsb2dnZXIiLCJjb21tYW5kcyIsInJlcXVpcmUiLCJydW4iLCJvcHRpb25zIiwicnVubmFibGUiLCJmaWx0ZXIiLCJjIiwidHJpZ2dlciIsImRlYnVnIiwibGVuZ3RoIiwicmVzdWx0IiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIm5hbWUiLCJyZXN1bHRzIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFDQSxNQUFNQSxNQUFNLEdBQUcsMEJBQWEsVUFBYixDQUFmO0FBRUEsTUFBTUMsUUFBUSxHQUFHLENBQUNDLE9BQU8sQ0FBQyxTQUFELENBQVIsRUFBcUJBLE9BQU8sQ0FBQyxXQUFELENBQTVCLEVBQTJDQSxPQUFPLENBQUMsWUFBRCxDQUFsRCxDQUFqQjtlQUVlO0FBQ1BDLEVBQUFBLEdBQU4sQ0FBVUMsT0FBVixFQUFtQjtBQUFBO0FBQ2pCLFlBQU1DLFFBQVEsR0FBR0osUUFBUSxDQUFDSyxNQUFULENBQWlCQyxDQUFELElBQU9BLENBQUMsQ0FBQ0MsT0FBRixDQUFVSixPQUFWLENBQXZCLENBQWpCO0FBRUFKLE1BQUFBLE1BQU0sQ0FBQ1MsS0FBUCxDQUFhLHlCQUFiLEVBQXdDSixRQUFRLENBQUNLLE1BQWpEO0FBRUEsWUFBTUMsTUFBTSxTQUFTQyxPQUFPLENBQUNDLEdBQVIsQ0FDbkJSLFFBQVEsQ0FBQ1MsR0FBVCxDQUFjUCxDQUFELElBQU87QUFDbEJQLFFBQUFBLE1BQU0sQ0FBQ1MsS0FBUCxDQUFhLFlBQWIsRUFBMkJGLENBQUMsQ0FBQ1EsSUFBN0I7QUFDQSxlQUFPUixDQUFDLENBQUNKLEdBQUYsQ0FBTUMsT0FBTixDQUFQO0FBQ0QsT0FIRCxDQURtQixDQUFyQjtBQU9BLFlBQU1ZLE9BQU8sR0FBR0wsTUFBTSxDQUFDTSxJQUFQLENBQVksSUFBWixDQUFoQjtBQUVBakIsTUFBQUEsTUFBTSxDQUFDUyxLQUFQLENBQWEsVUFBYixFQUF5Qk8sT0FBekI7QUFFQSxhQUFPQSxPQUFQO0FBaEJpQjtBQWlCbEI7O0FBbEJZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIgfSBmcm9tICcuLi9sb2dnZXInO1xuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKCdjb21tYW5kcycpO1xuXG5jb25zdCBjb21tYW5kcyA9IFtyZXF1aXJlKCcuL2NsZWFyJyksIHJlcXVpcmUoJy4vdmVyc2lvbicpLCByZXF1aXJlKCcuL3ZlcnNpb25zJyldO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFzeW5jIHJ1bihvcHRpb25zKSB7XG4gICAgY29uc3QgcnVubmFibGUgPSBjb21tYW5kcy5maWx0ZXIoKGMpID0+IGMudHJpZ2dlcihvcHRpb25zKSk7XG5cbiAgICBsb2dnZXIuZGVidWcoJ1J1bm5pbmcgJW8gZXN3IGNvbW1hbmRzJywgcnVubmFibGUubGVuZ3RoKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgcnVubmFibGUubWFwKChjKSA9PiB7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZygnUnVubmluZyAlcycsIGMubmFtZSk7XG4gICAgICAgIHJldHVybiBjLnJ1bihvcHRpb25zKTtcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIGNvbnN0IHJlc3VsdHMgPSByZXN1bHQuam9pbignXFxuJyk7XG5cbiAgICBsb2dnZXIuZGVidWcoJ1N1Y2Nlc3M6JywgcmVzdWx0cyk7XG5cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfSxcbn07XG4iXX0=