'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var ava_1 = require("ava");
var convertKeys = require("../");
ava_1.default('should return an empty object when give an empty object', function (t) {
    t.deepEqual(convertKeys.toCamel({}), {});
});
ava_1.default('should return an empty array when give an empty array', function (t) {
    t.deepEqual(convertKeys.toCamel([]), []);
});
ava_1.default('should return object as coverted camel case', function (t) {
    var obj = {
        'hoge_fuga': 1,
        'hogeHoge': {
            'piyo_piyo': 'aaaa',
            'fuga_fuga': 'bbbb'
        },
        'piyo_array': [
            { 'foo_bar': 'a' },
            { 'foo_bar': 'b' }
        ]
    };
    var res = {
        hogeFuga: 1,
        hogeHoge: {
            piyoPiyo: 'aaaa',
            fugaFuga: 'bbbb'
        },
        piyoArray: [
            { fooBar: 'a' },
            { fooBar: 'b' }
        ]
    };
    t.deepEqual(convertKeys.toCamel(obj), res);
});
ava_1.default('should return object as coverted snake case', function (t) {
    var obj = {
        'hoge_fuga': 1,
        'hogeHoge': {
            'piyo_piyo': 'aaaa',
            'fuga_fuga': 'bbbb',
            'testTest': 'test'
        },
        'piyo_array': [
            { 'fooBar': 'a' },
            { 'fooBar': 'b' }
        ]
    };
    var res = {
        'hoge_fuga': 1,
        'hoge_hoge': {
            'piyo_piyo': 'aaaa',
            'fuga_fuga': 'bbbb',
            'test_test': 'test'
        },
        'piyo_array': [
            { 'foo_bar': 'a' },
            { 'foo_bar': 'b' }
        ]
    };
    t.deepEqual(convertKeys.toSnake(obj), res);
});
//# sourceMappingURL=index.js.map