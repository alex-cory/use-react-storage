"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
exports.rules = {
    'padding-around-after-all-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'afterAll' },
        { blankLine: 'always', prev: 'afterAll', next: '*' },
    ]),
    'padding-around-after-each-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'afterEach' },
        { blankLine: 'always', prev: 'afterEach', next: '*' },
    ]),
    'padding-around-before-all-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'beforeAll' },
        { blankLine: 'always', prev: 'beforeAll', next: '*' },
    ]),
    'padding-around-before-each-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'beforeEach' },
        { blankLine: 'always', prev: 'beforeEach', next: '*' },
    ]),
    'padding-around-describe-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'describe' },
        { blankLine: 'always', prev: 'describe', next: '*' },
    ]),
    'padding-around-test-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: ['test', 'it'] },
        { blankLine: 'always', prev: ['test', 'it'], next: '*' },
    ]),
    'padding-before-after-all-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'afterAll' },
    ]),
    'padding-before-after-each-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'afterEach' },
    ]),
    'padding-before-before-all-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'beforeAll' },
    ]),
    'padding-before-before-each-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'beforeEach' },
    ]),
    'padding-before-describe-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'describe' },
    ]),
    'padding-before-expect-statements': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'expect' },
        { blankLine: 'any', prev: 'expect', next: 'expect' },
    ]),
    'padding-around-expect-groups': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: 'expect' },
        { blankLine: 'always', prev: 'expect', next: '*' },
        { blankLine: 'any', prev: 'expect', next: 'expect' },
    ]),
    'padding-before-test-blocks': utils_1.makeRule([
        { blankLine: 'always', prev: '*', next: ['test', 'it'] },
    ]),
    'padding-before-all': utils_1.makeRule([
        {
            blankLine: 'always',
            prev: '*',
            next: [
                'afterAll',
                'afterEach',
                'beforeAll',
                'beforeEach',
                'describe',
                'expect',
                'it',
                'test',
            ],
        },
        { blankLine: 'any', prev: 'expect', next: 'expect' },
    ]),
};
exports.configs = {
    recommended: {
        plugins: ['jest-formatting'],
        rules: {
            'jest-formatting/padding-around-after-all-blocks': 2,
            'jest-formatting/padding-around-after-each-blocks': 2,
            'jest-formatting/padding-around-before-all-blocks': 2,
            'jest-formatting/padding-around-before-each-blocks': 2,
            'jest-formatting/padding-around-describe-blocks': 2,
            'jest-formatting/padding-around-test-blocks': 2,
        },
    },
    strict: {
        plugins: ['jest-formatting'],
        rules: {
            'jest-formatting/padding-around-after-all-blocks': 2,
            'jest-formatting/padding-around-after-each-blocks': 2,
            'jest-formatting/padding-around-before-all-blocks': 2,
            'jest-formatting/padding-around-before-each-blocks': 2,
            'jest-formatting/padding-around-expect-groups': 2,
            'jest-formatting/padding-around-describe-blocks': 2,
            'jest-formatting/padding-around-test-blocks': 2,
        },
    },
};
